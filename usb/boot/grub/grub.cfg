function load_efi_video {
    set gfxmode=auto
    insmod efi_gop
    insmod efi_uga
    insmod gfxterm
    terminal_output gfxterm
}

function load_video {
    set gfxmode=auto
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
    insmod gfxterm
    terminal_output gfxterm
}

if loadfont ($root)/boot/grub/fonts/unicode.pf2 ; then
    if load_efi_video ; then
        set bios="UEFI BIOS"
    else
        load_video
        set bios="Legacy BIOS"
    fi
fi

set locale_dir=($root)/boot/grub/locale
insmod gettext

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
if background_color 44,0,30; then
    clear
fi

set gfxpayload=keep

# other kernel parameter
# nomodeset noacpi noapic noeject noprompt nopersistent
set options="file=/cdrom/preseed/ubuntu.seed boot=casper locale=en_US.UTF-8"

menuentry "ubuntu-12.04.5-desktop-amd64.iso" {
        set isofile=/iso/ubuntu-12.04.5-desktop-amd64.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/casper/vmlinuz.efi iso-scan/filename=$isofile $options
        initrd  (loop)/casper/initrd.lz
}

menuentry "ubuntu-14.04.4-desktop-amd64.iso" {
        set isofile=/iso/ubuntu-14.04.4-desktop-amd64.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/casper/vmlinuz.efi iso-scan/filename=$isofile $options
        initrd  (loop)/casper/initrd.lz
}

menuentry "ubuntu-14.04.4-server-amd64.iso" {
        set isofile=/iso/ubuntu-14.04.4-server-amd64.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/casper/vmlinuz.efi iso-scan/filename=$isofile $options
        initrd  (loop)/casper/initrd.lz
}

menuentry "ubuntu-15.04-desktop-amd64.iso" {
        set isofile=/iso/ubuntu-15.04-desktop-amd64.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/casper/vmlinuz.efi iso-scan/filename=$isofile $options
        initrd  (loop)/casper/initrd.lz
}

menuentry "ubuntu-15.10-desktop-amd64.iso" {
        set isofile=/iso/ubuntu-15.10-desktop-amd64.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/casper/vmlinuz.efi iso-scan/filename=$isofile $options
        initrd  (loop)/casper/initrd.lz
}

menuentry '[loopback]ubuntu-16.04.3-desktop-amd64' {
	set isofile='/iso/ubuntu-16.04.3-desktop-amd64.iso'
	loopback loop $isofile
	linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile $options
	initrd (loop)/casper/initrd.lz
}

menuentry '[loopback]ubuntu-16.04.1-server-amd64' {
	set isofile='/iso/ubuntu-16.04.1-server-amd64.iso'
	loopback loop $isofile
	linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile $options
	initrd (loop)/casper/initrd.lz
}

menuentry '[loopback]ubuntu-16.10-desktop-amd64' {
	set isofile='/iso/ubuntu-16.10-desktop-amd64.iso'
	loopback loop $isofile
	linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile $options
	initrd (loop)/casper/initrd.lz
}

menuentry '[loopback]ubuntu-17.10-desktop-amd64' {
	set isofile='/iso/ubuntu-17.10-desktop-amd64.iso'
	loopback loop $isofile
	linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile $options
	initrd (loop)/casper/initrd.lz
}

set debian_options="boot=live config toram"

menuentry "debian-live-8.3.0-amd64-xfce-desktop.iso" {
        set isofile=/iso/debian-live-8.3.0-amd64-xfce-desktop.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/live/vmlinuz findiso=$isofile $debian_options
        initrd  (loop)/live/initrd.img
}

menuentry "debian-live-8.3.0-amd64-standard.iso" {
        set isofile=/iso/debian-live-8.3.0-amd64-standard.iso
        loopback loop $isofile
        set root=(loop)
        linux   (loop)/live/vmlinuz findiso=$isofile $debian_options
        initrd  (loop)/live/initrd.img
}

set imgdevpath="/dev/disk/by-label/MULTIBOOT"

menuentry '[loopback]archlinux-2017.11.01-x86_64.iso' {
	set isofile='/iso/archlinux-2017.11.01-x86_64.iso'
	loopback loop $isofile
	linux (loop)/arch/boot/x86_64/vmlinuz archisodevice=/dev/loop0 img_dev=$imgdevpath img_loop=$isofile earlymodules=loop
	initrd (loop)/arch/boot/x86_64/archiso.img
}

